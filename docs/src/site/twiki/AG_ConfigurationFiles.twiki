<noautolink>

[[index][::Go back to Oozie Documentation Index::]]

---+!! Oozie Configuration Files

%TOC%

---++ Introduction

Oozie configuration is done in 3 different configuration files, one for the configuration of Oozie itself, one for the
logging configuration and one for security configuration.

Oozie configuration files are read from the classpath (default) or from a directory specified at start up time.

---++ Oozie Server, Default Configuration

Similar to Hadoop, Oozie has a =oozie-default.xml= configuration file which defines all possible configuration
properties as well as their default values.

The =oozie-default.xml= file is bundled within Oozie JAR file and it should not be modified.

The =oozie-default.xml= file is always loaded from the classpath.

For reference purposes, this documentation includes a copy of the [[./oozie-default.xml.txt][oozie-default.xml]] file.

---++ Oozie Server, Site Configuration

Oozie configuration can be customized and tuned for a particular installation with an additional *site* configuration
file. The configuration file is a Hadoop configuration file:

<verbatim>
<configuration>
    <property>
        <name>PROPERTY_NAME</name>
        <value>PROPERTY_VALUE</value>
        <description>PROPERTY_DESCRIPTION</description>
    </property>
    ...
</configuration>
</verbatim>

Similar to Hadoop, the properties set in the *site* configuration file override the values defined in default
configuration file, =oozie-default.xml=

The default name for the *site* configuration file is =oozie-site.xml=.

The name of the *site* configuration file can be changed by setting the Java System Propety =oozie.config.file= in the
servlet container running Oozie.

*NOTE:* In Tomcat, Java System Properties must be set in the =CATALINA_OPTS= environment variable in the shell from
where Tomcat is started. For example: <code>export CATALINA_OPTS="-Doozie.config.file=my-oozie-site.xml"</code>.

By default, the *site* configuration file is read from the classpath.

---++ Oozie Logging Configuration

Oozie uses Log4J for loggin.

The default Log4J configuration file for Oozie is =oozie-log4j.properties= and it is bundled with the web-application.

The name of the Log4J configuration file can be changed by setting the Java System Propety =oozie.log4j.file= in the
servlet container running Oozie.

*NOTE:* In Tomcat, Java System Properties must be set in the =CATALINA_OPTS= environment variable in the shell from
where Tomcat is started.

The default Log4J bundled with Oozie is [[./oozie-log4j.properties.txt][oozie-log4j.properties]].

*NOTE:* In Tomcat, Java System Properties must be set in the =CATALINA_OPTS= environment variable in the shell from
where Tomcat is started. For example: <code>export CATALINA_OPTS="-Doozie.log4j.file=my-log4j.properties"</code>.

By default, the *log4j* configuration file is read from the classpath.

---++ Oozie Security Configuration

Oozie provides a pluggable mechanism for authorization, via the =AuthorizationService= class.

Refer to the [[AG_Security][Oozie Security]] documentation for details on how Oozie security works.

The bundled =AuthorizationService= reads the list of Administrator users from the =adminusers.txt= file.

The name of the =adminusers.txt= file is not changeable via configuration.

The =adminusers.txt= file is only loaded if Oozie configuration is loaded from a directory, when Oozie configuration
is loaded from the classpath the =adminusers.txt= files is not loaded and Oozie runs with no admin users configured.

The =adminusers.txt= is a text file that contains one username per line.

---++ Loading Oozie Configuration Files from a Directory

Oozie server, logging and security configuration files can be read from a directory in the local file system.

The directory from where to read the configuration files can be specified by setting the Java System Propety
 =oozie.config.dir= in the servlet container running Oozie.

The specified directory must be an absolute path.

*NOTE:* In Tomcat, Java System Properties must be set in the =CATALINA_OPTS= environment variable in the shell from
where Tomcat is started. For example: <code>export CATALINA_OPTS="-Doozie.config.dir=/home/tucu/oozie-conf"</code>.

[[index][::Go back to Oozie Documentation Index::]]

</noautolink>
