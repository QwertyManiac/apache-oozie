<noautolink>

[[index][::Go back to Oozie Documentation Index::]]

---+!! Building Oozie

%TOC%

---++ System Requirements

   * Unix box (tested on Mac OS X or Linux)
   * Java JDK 1.6+
   * [[http://archive.apache.org/dist/maven/binaries/apache-maven-2.2.0-bin.tar.gz][Maven 2.2.0]]
   * [[http://hadoop.apache.org/core/releases.html][Hadoop 0.20.2+]]
   * [[http://hadoop.apache.org/pig/releases.html][Pig 0.7+]]

The Java commands (java, javac) should be in the command path.

The Maven command (mvn) should be in the command path.

#InitialMavenSetup
---++ Initial Maven Setup

To generate the documentation, Oozie uses a patched Doxia plugin for Maven with improved twiki support.
Run the following command to compile/install the plugin.

<verbation>
$ build-setup/setup-maven.sh
</verbatim>

#SshSetup
---++ Passphare-less SSH Setup

*NOTE: SSH actions are deprecated in Oozie 2. If you are building Oozie 2, this section can be ignored.*

To run SSH Testcases and for easier Hadoop start/stop configure SSH to localhost to be passphrase-less.

Create your SSH keys without a passphrase and add the public key to the authorized file:

<verbatim>
$ ssh-keygen -t dsa
$ cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys2
</verbatim>

Test that you can ssh without password:

<verbatim>
$ ssh localhost
</verbatim>


---++ Building and Testing Oozie

Due to Hadoop and Pig API changes and Hadoop RPC protocol constraints Oozie has to be built for a specific version of
Hadoop.

All the following options can be used in multiple combinations.

Use the option <code>-DhadoopGroupId=org.apache.hadoop</code> (default) to build Oozie with an Apache Hadoop version.
To build Oozie with a Yahoo Hadoop version use the <code>-DhadoopGroupId=com.yahoo.hadoop</code>.

Use the option <code>-DhadoopVersion=0.20.2</code> (default) to build Oozie with a given Hadoop version.

Use the option <code>-DpigVersion=0.7.0</code> (default) to run the testcases with a given version of Pig.

Use the option <code>-Doozie.test.hadoop.security=pre</code> (default) for versions of Hadoop prior to 0.20.104.0.

Use the option <code>-Doozie.test.hadoop.security=simple</code> for versions of Hadoop 0.20.104.0 or greater with Kerberos
OFF.

Use the option <code>-Doozie.test.hadoop.security=kerberos</code> for versions of Hadoop 0.20.104.0 or greater with Kerberos
ON.

Use the option <code>-Doozie.test.hadoop.minicluster=true</code> (default) to run the testcases with minicluster
(no Hadoop cluster necessary).

Use the option <code>-Doozie.test.hadoop.minicluster=false</code> to run the testcases against a Hadoop cluster.

Use the option <code>-Doozie.test.job.tracker=localhost:9001</code> (default) to specify the Job Tracker of the cluster.

Use the option <code>-Doozie.test.name.node=hdfs://localhost:9000</code> (default) to specify the Name Node of the cluster.

The following options are available (default values shown) when testing Oozie with Hadoop post 0.20.104.0 with Kerberos authentication
enabled:

   * oozie.test.kerberos.keytab.file=${user.home}/oozie.keytab
   * oozie.test.kerberos.realm=LOCALHOST
   * oozie.test.kerberos.oozie.principal=${user.name}/localhost
   * oozie.test.kerberos.jobtracker.principal=mapred/localhost
   * oozie.test.kerberos.namenode.principal=hdfs/localhost

*IMPORTANT:* Minicluster testing cannot be used with Kerberos ON.

Use the Maven option <code>-Dtest=#TEST_CASE_CLASS_NAME#</code> to run a single test case.

Use the Maven option <code>-DskipTests</code> to skip all testcases.

---+++ Building Oozie for MySQL

Oozie will connect to HSQL as default. To change Oozie database setting,
the database connection string needs to be configure in the build time.

The usage is =bin/mkdistro.sh [-ddbtype] [-uusername] [-ppassword] [-lurl]=

For example,
1. Configure Oozie to local MySQL
$ bin/mkdistro.sh -dmysql -uroot -llocalhost:3306/oozie -DskipTests

2. Configure Oozie to HSQL (default)
$ bin/mkdistro.sh -dhsql -usa -lmem/oozie -DskipTests

---++ Building an Oozie Distribution, Different Hadoop Versions, Different DBs

The <code>bin/mkdistro.sh</code> script generates an Oozie distro.

Built distros will be available in the <code>distro/target/</code> directory.

All Maven options above can be used with the <code>mkdistro.sh</code> script.

For example to build an Oozie distribution for a specific version of Hadoop and Pig execute the <code>mkdistro.sh</code> command
with the following options:

<verbatim>
$ bin/mkdistro.sh
</verbatim>

---+++ Examples of Building and Testing Oozie

Compiling and running all testcases with minicluster with Oozie's default Hadoop and Pig versions:

<verbatim>
$ bin/mkdistro.sh
</verbatim>

Generating a distribution for the default Apache version of Hadoop and Pig without running the testcases.

<verbatim>
$ bin/mkdistro.sh -DskipTests
</verbatim>

Compiling and running all testcases with minicluster with a specific version of Hadoop pre 0.20.104.0:

<verbatim>
$ bin/mkdistro.sh -DhadoopVersion=0.20.2
</verbatim>

Compiling and running one testcase with minicluster with a specific version of Hadoop pre 0.20.2 and Pig:

<verbatim>
$ bin/mkdistro.sh -Dtest=TestPigMain -DhadoopVersion=0.20.2 -DpigVersion=0.7.0
</verbatim>

Generating a distribution for the Apache security version of Hadoop without running the testcases.

<verbatim>
$ bin/mkdistro.sh -DskipTests -DhadoopVersion=0.20.104.0 -Doozie.test.hadoop.security=kerberos
</verbatim>

Compiling and running all testcases with minicluster with a specific version of Hadoop post 0.20.104.0 with simple
authentication:

<verbatim>
$ bin/mkdistro.sh-DhadoopVersion=0.20.104.0 -Doozie.test.hadoop.security=simple
</verbatim>

Compiling and running all testcases with minicluster with a specific version of Hadoop post 0.20.104.0 with Kerberos
authentication (it requires Hadoop 0.20.104.0 running with Kerberos ON):

<verbatim>
$ bin/mkdistro.sh -DhadoopVersion=0.20.104.0 -Doozie.test.hadoop.security=kerberos -Doozie.test.hadoop.minicluster=false
</verbatim>

The above example assumes Hadoop job tracker and namenode are running locally in ports 9001 and 9000 and the kerberos
settings are the defaults shwon in previous section, all the <code>oozie.test.kerberos.</code> options.

---++ Oozie Version Numbers

The full version number of an Oozie build is tied to the Hadoop version number it works with.

This serves 2 purposes:

   * Identifies the version of Hadoop that an Oozie distro/instance works with.
   * Gives different versions to Oozie JARs thus allowing them to be properly identified by build tools (Maven, Ivy).

The Oozie version format is <code><OOZIE_VERSION>-<HADOOP_VERSION>[--<BUILD>]</code>.

The <code>OOZIE_VERSION</code> indicates the Oozie version.

The <code>HADOOP_VERSION</code> indicates the Hadoop version.

The <code>BUILD</code> can be be used to specify SNAPSHOT developer builds or a particular build.

For example: <code>0.1-0.20.2--SNAPSHOT</code>

This 3 components of the Oozie version are controlled from Oozie main POM, in the properties section and they can be
changed as Maven options <code>-D</code> for a particular build.

<verbatim>
    <oozieVersion>2.0.0</oozieVersion>
    <hadoopVersion>0.20.2</hadoopVersion>
    <build>SNAPSHOT</build>
</verbatim>

[[index][::Go back to Oozie Documentation Index::]]

</noautolink>
